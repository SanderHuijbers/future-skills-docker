# reverse_proxy.conf
# Nginx configuratie voor de reverse proxy, webserver en API

# BELANGRIJKE CORRECTIE: Alles ingesloten in een 'http' blok
http {
    # Definieer de proxy cache zone in de http-context
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

    # Upstream servers defineren
    # Dit zijn de interne servicenamen zoals gedefinieerd in docker-compose.yml
    upstream backend_webserver {
        server webserver:80; # Naam van de webserver service en poort
    }

    upstream backend_api {
        server api-server:5000; # Naam van de API service en poort
    }

    # HTTP-server blok (poort 80)
    # Dit blok vangt alle HTTP-verkeer op en leidt het om naar HTTPS
    server {
        listen 80;
        server_name localhost; # Luister naar verzoeken voor localhost op poort 80

        # Omleiding naar HTTPS
        return 301 https://$host$request_uri; # Permanent omleiden naar HTTPS
    }

    # HTTPS-server blok (poort 443)
    # Dit blok verwerkt alle HTTPS-verzoeken
    server {
        listen 443 ssl; # Luister op poort 443 en schakel SSL in
        server_name localhost; # Luister naar verzoeken voor localhost op poort 443

        # SSL-certificaten specificeren
        ssl_certificate /etc/nginx/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/nginx-selfsigned.key;

        # Aanbevolen SSL-instellingen voor beveiliging
        ssl_protocols TLSv1.2 TLSv1.3; # Alleen veilige TLS-protocollen toestaan
        ssl_prefer_server_ciphers on; # Voorkeur voor server-cipher suites
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"; # Sterke cipher suites
        # ssl_session_cache shared:SSL:10m; # Uitgecommentarieerd om conflict te voorkomen
        ssl_session_timeout 10m; # Timeout voor SSL-sessies

        # NIEUWE BEVEILIGINGSHEADERS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "DENY";
        add_header X-Content-Type-Options "nosniff";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; font-src 'self'; connect-src 'self';";
        add_header Referrer-Policy "no-referrer-when-downgrade";

        # Reverse proxy voor de webserver met caching
        location / {
            proxy_pass http://backend_webserver; # Stuurt verzoeken door naar de webserver
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Caching inschakelen voor statische webserver content
            proxy_cache my_cache; # Gebruik de gedefinieerde cachezone
            proxy_cache_valid 200 302 10m; # Cache 200/302 responses 10 minuten
            proxy_cache_valid 404 1m; # Cache 404 responses 1 minuut
            proxy_cache_revalidate on; # Revalidatie met If-Modified-Since
            proxy_cache_min_uses 1; # Hoe vaak een item moet worden aangevraagd voordat het wordt gecachet
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504; # Serveer stale content bij errors
            add_header X-Cache-Status $upstream_cache_status; # Voeg cache status header toe
        }

        # Reverse proxy voor de API
        location /api {
            proxy_pass http://backend_api; # Stuurt verzoeken door naar de API, INCL. /api prefix
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_cache my_cache;
            proxy_cache_valid 200 1m;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
}
