# Definieer de backend webservers
# Gebruik hier de naam van de webserver container of de service naam in een Docker Compose netwerk
upstream backend_webserver {
    # De naam 'web-alpine' is de standaard containernaam die we eerder hebben gebruikt.
    # Als je een ander netwerk of naam gebruikt, pas dit dan aan.
    server web-alpine:80;
}

server {
    listen 80;
    listen [::]:80;
    server_name _; # Luister op elke hostnaam

    # HTTP naar HTTPS redirect (optioneel, maar aanbevolen voor HTTPS)
    # return 301 https://$host$request_uri;

    location / {
        # Stuur verkeer door naar de backend webserver gedefinieerd in de upstream
        proxy_pass http://backend_webserver;

        # Voeg standaard headers toe voor proxying
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Optioneel: Verbeter logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}

# HTTPS Server blok
# Vereist SSL/TLS certificaten
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _; # Luister op elke hostnaam

    # === SSL/TLS Configuratie ===
    # VERVANG DEZE DOOR JE EIGEN CERTIFICATEN
    # Dit zijn placeholder paden en bestanden!
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

    # Optionele SSL/TLS settings voor betere beveiliging (aanbevolen)
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256';
    ssl_prefer_server_ciphers on;

    location / {
        # Stuur verkeer door naar de backend webserver gedefinieerd in de upstream
        proxy_pass http://backend_webserver;

        # Voeg standaard headers toe voor proxying
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Optioneel: Verbeter logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
