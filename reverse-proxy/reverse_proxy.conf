    # reverse_proxy.conf
    # Nginx configuratie voor de reverse proxy, webserver en API

    # Definieer de proxy cache zone in de http-context
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

    # Upstream servers defineren
    # Dit zijn de interne servicenamen zoals gedefinieerd in docker-compose.yml
    upstream backend_webserver {
        server webserver:80; # Naam van de webserver service en poort
    }

    upstream backend_api {
        server api-server:5000; # Naam van de API service en poort
    }

    # HTTP-server blok (poort 80)
    # Dit blok vangt alle HTTP-verkeer op en leidt het om naar HTTPS
    server {
        listen 80;
        server_name localhost; # Luister naar verzoeken voor localhost op poort 80

        # Omleiding naar HTTPS
        return 301 https://$host$request_uri; # Permanent omleiden naar HTTPS
    }

    # HTTPS-server blok (poort 443)
    # Dit blok verwerkt alle HTTPS-verzoeken
    server {
        listen 443 ssl; # Luister op poort 443 en schakel SSL in
        server_name localhost; # Luister naar verzoeken voor localhost op poort 443

        # SSL-certificaten specificeren
        ssl_certificate /etc/nginx/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/nginx-selfsigned.key;

        # Aanbevolen SSL-instellingen voor beveiliging
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_session_timeout 10m;

        # Reverse proxy voor de webserver met caching
        location / {
            proxy_pass http://backend_webserver;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_cache my_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_revalidate on;
            proxy_cache_min_uses 1;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Reverse proxy voor de API
        location /api {
            # BELANGRIJKE CORRECTIE: Veranderd van rewrite naar directe proxy_pass
            # De slash aan het einde van proxy_pass is belangrijk:
            # http://backend_api/ - dit vertelt Nginx om /api/ te vervangen door /
            # http://backend_api - dit vertelt Nginx om het pad intact te laten
            proxy_pass http://backend_api; # Stuurt verzoeken door naar de API, INCL. /api prefix
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_cache my_cache;
            proxy_cache_valid 200 1m;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
    