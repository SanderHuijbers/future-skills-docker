build-and-test:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Load .env file (for local development variables if any)
        run: |
          echo "WEB_SERVER_SERVICE_NAME=webserver" >> $GITHUB_ENV
          echo "API_SERVER_SERVICE_NAME=api-server" >> $GITHUB_ENV
          echo "REVERSE_PROXY_SERVICE_NAME=reverse-proxy" >> $GITHUB_ENV
          echo "REVERSE_PROXY_HTTP_PORT=80" >> $GITHUB_ENV
          echo "REVERSE_PROXY_HTTPS_PORT=443" >> $GITHUB_ENV

      - name: Generate self-signed SSL certificates
        run: |
          chmod +x scripts/generate_certs.sh
          ./scripts/generate_certs.sh

      - name: Build and start services
        run: docker compose up -d --build --wait

      - name: Run Backend Unit Tests (Pytest)
        run: |
          # Voer pytest uit binnen de api-server container.
          # De tests/ directory wordt naar /app/tests/ gekopieerd in de Dockerfile.
          docker compose exec api-server pytest /app/tests/
        working-directory: ./

      - name: List running containers and their health status (for debugging)
        run: docker ps -a

      - name: Get logs for all services (for debugging)
        if: always()
        run: |
          echo "--- Webserver Logs ---"
          docker logs webserver || true
          echo "--- API Server Logs ---"
          docker logs api-server || true
          echo "--- Reverse Proxy Logs ---"
          docker logs reverse-proxy || true

      - name: Verify Web Server access (via HTTPS)
        run: |
          echo "Verifying web server access (HTTPS)..."
          for i in $(seq 1 10); do
            curl -k --fail https://localhost && s=0 && break || s=$?
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done
          if [ $s -eq 0 ]; then
            echo "Web server access successful."
          else
            echo "Web server access failed after multiple retries!"
            exit 1
          fi

      - name: Verify API access (via HTTPS)
        run: |
          echo "Verifying API access (HTTPS)..."
          for i in $(seq 1 10); do
            curl -k --fail https://localhost/api && s=0 && break || s=$?
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done
          if [ $s -eq 0 ]; then
            echo "API access successful."
          else
            echo "API access failed after multiple retries!"
            exit 1
          fi

      - name: Stop services (cleanup)
        if: always()
        run: docker compose down
