---  # YAML document start marker
# docker-compose.yml
# Definieert webserver, reverse proxy, en API services in een custom netwerk.
# Gebruikt omgevingsvariabelen uit het .env bestand voor interne configuratie.

version: '3.8'  # Docker Compose versie (optioneel)

services:

  # Statische webserver service
  # Servicenaam moet een letterlijke string zijn, geen variabele.
  webserver:
    image: my-web-server2-alpine
    # Containernaam variabele
    container_name: ${WEB_SERVER_SERVICE_NAME}
    build:
      context: ./webserver
      dockerfile: Dockerfile.webserver
    networks:
      - web-network
    restart: always

  # Backend API applicatie service
  # Servicenaam moet een letterlijke string zijn, geen variabele.
  api-server:
    image: my-api-server
    # Containernaam variabele
    container_name: ${API_SERVER_SERVICE_NAME}
    build:
      context: ./api-server
      dockerfile: Dockerfile.api-server
    networks:
      - web-network
    restart: always

# Nginx reverse proxy service
  # Servicenaam moet een letterlijke string zijn, geen variabele.
  reverse-proxy:
    image: my-reverse-proxy
    # Containernaam variabele
    container_name: ${REVERSE_PROXY_SERVICE_NAME}
    build:
      context: ./reverse-proxy
      dockerfile: Dockerfile.reverse-proxy
    ports:
      - "${REVERSE_PROXY_HTTP_PORT}:${REVERSE_PROXY_HTTP_PORT}"     # Poort 80
      # Poort 443
      - "${REVERSE_PROXY_HTTPS_PORT}:${REVERSE_PROXY_HTTPS_PORT}"
    volumes: # <-- VOEG DEZE LIJN TOE
      - ./reverse-proxy/reverse_proxy.conf:/etc/nginx/nginx.conf:ro
      - ./reverse-proxy/certs:/etc/nginx/certs:ro
    networks:
      - web-network
    restart: always
    depends_on:
      webserver:
        condition: service_healthy
      api-server:
        condition: service_healthy

# Definieer het custom netwerk
networks:
  web-network:
    driver: bridge
    name: my-web-platform-network
